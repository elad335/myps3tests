//--------------------------------------------
// Simple vertex shader
// transforms the vertex into clip space
// passes the texture coordinate through
//--------------------------------------------
void main (float4                  position : ATTR0,     // Local-space position
           float2                  texCoord : ATTR1,    // Diffuse texture coordinate
           float3                  normal   : ATTR2,       // Local-space normal

           uniform float4x4        modelViewProj,           // Local-to-clip matrix
		   uniform float3		   eyePosLocal,				// eye pos in local space

           out float4              oPosition : POSITION,    // Output clip-space position
           out float4              oColor    : COLOR0,      // Output color
           out float2              oTexCoord : TEXCOORD0,   // Output diffuse texture coordinate
           out float4              oSpecular : TEXCOORD1    // Output specular
   		)
{
    [loop]
    for (int i = 0; i < 5; i++)
    {
        float shininess =  17.8954f;   //arbitrary shininess value

        oPosition = position;
        oColor.xyz += 0.8;
        oColor.w = 1.0f;
    }
}